---
title: "Delta correction and examples of ROMS-NPZ indices for GOACLIM models"
author: "Grant Adams"
format: html
editor: visual
execute:
  echo: TRUE
  message: FALSE
  warning: FALSE
---

## Overview

This quarto doc overviews the process for making environmental indices from the ROMS NEP data including: data overview, index creation, and delta correction. We don't proved generic functions because each GOA-CLIM modeler may have indices specific to a particular spatial and temporal domain. We therefore provide an example rubric that folks can copy and derive their desired indices.

## Data overview

Projections of environmental variables biomass are derived from a downscaled Intergovernmental Panel on Climate Change (IPCC) projection model from the coupled model intercomparison project (CMIP): GFDL-ESM2M. The IPCC projection model was downscaled using the North East Pacific (NEP) Regional Ocean Modeling System (ROMS) developed for the Gulf of Alaska.

ROMS simulations are referred to as the following:

-   **hindcast**: representing the final years of the spinup forced with observed oceanographic conditions to better represent historical conditions (1990 to 2020),

-   **projection**: GFDL-ESM2M downscaled projection (2015 to 2099)

-   **historical**: representing model spinup (1980 to 2014).

Variables from ROMS simulations averaged for each layer and grid cell on a monthly time scale were averaged or summed across the following vertical distributions:

-   Surface (from 0 to 10 m depth)

-   Bottom (from bottom to 10 m from bottom)

-   Midwater (from 10 m depth to 10 m from bottom)

The averaged for each NMFS management area to the 300 m or 1,000 m isobath (areas are calculated from `st_area` in the `sf` package):

-   610 area is 57225003746 $m^2$ for 300 m isobath and 63986698621 $m^2$ for 1,000 m isobath

-   620 area is 62597059226 $m^2$ for 300 m isobath and 69583703140 $m^2$ for 1,000 m isobath

-   630 area is 98582220025 $m^2$ for 300 m isobath and 105918077937 $m^2$ for 1,000 m isobath

-   640 area is 32560976631 $m^2$ for 300 m isobath and 37270389681 $m^2$ for 1,000 m isobath

-   650 area is 36726651409 $m^2$ for 300 m isobath and 43952466109 $m^2$ for 1,000 m isobath

-   All areas

The "raw" monthly data are located in the **"/Data/NEP_10k_revised_indices"** folder with the 300 or 1000 at the end of the file name indicating the isobath they are averaged to. They represent the monthly indices either averaged across each depth and spatial domain ("nep_avg\_...") or summed across each depth domain and then averaged across the spatial domain ("nep_sum\_..."). The "/Data/NEP_10k_indices" folder are the old indices that had errors in the time-series fixed by Al.

## Index derivation

Environmental indices can be derived for each modelers following their specific needs. We don't develop all indices here as individual modeler's needs may vary. But, indices integrated across each spatial NMFS management area should be area weighted using the following areas.

## Delta correction overview

Delta correction is done to correct for shifts in the time series between the hindcast and projection. For normally distributed variables (\*Y\*):

$$
X^{proj'}_t=\bar{X}^{hind}_{\bar{T}}+
\left(\frac{\sigma^{hind}_{\bar{T}}}{\sigma^{hist}_{\bar{T}}} * 
\left(X^{proj}_t-\bar{X}_{\bar{T}}^{hist} \right)\right)
$$

where $X^{proj'}_t$ is the bias corrected projection index in time-step \$t\$, $\bar{X}^{hind}_{\bar{T}}$ is the average index value from the hindcast during reference period $T$, $\sigma^{hind}_{\bar{T}}$ is the standard deviation of the index from the hindcast during the reference period, $\sigma^{hist}_{\bar{T}}$ is the standard deviation of the index from the historical run during the reference period, $X^{proj}_t$ is the non bias-corrected projection index, $\bar{X}_{\bar{T}}^{hist}$ is the average value from historical run during the reference period.

For log-normally distributed variables the formula can be adjusted as follows:

$$
X^{proj'}_t=\exp\left(\bar{logX}^{hind}_{\bar{T}}+
\left(\frac{\sigma^{hind}_{\bar{T}}}{\sigma^{hist}_{\bar{T}}} * 
\left(logX^{proj}_t-\bar{logX}_{\bar{T}}^{hist} \right)\right)\right)
$$

where $T$, $\sigma^{hind}_{\bar{T}}$ is the standard deviation of the log index from the hindcast during the reference period, $\sigma^{hist}_{\bar{T}}$ is the standard deviation of the log index from the historical run during the reference period.

Because the smallest time step in month, the mean and variance terms should be calculated as follows:

-   Monthly indices: time-step $t$ should be year $y$ and month $m$ (e.g. $t=y,m$)

Users can decide to apply a delta correction method that does not use the ratio between the standard deviations as scaling factor. Scaling by the standard deviation may result in artefacts being introduced, for example if one of the $\sigma$ values is particularly high. This should not happen much at the spatial and temporal resolution used here, but it has been a known issue in Atlantis (which uses daily time steps and a small spatial scale, resulting in fewer ROMS points per calculation) and in some ACLIM applications. The default is `use_sd = TRUE`.

When doing the delta correction, users can decide whether they want the end product to be a time series that consists of the bias-corrected historical run and projection, or historical run, hindcast, and projection. The second option splices the hindcast (which incorporates observations) into the full bias-corrected time series. Analysts that are interested in exploring the effects of recent climate events in the GOA (e.g., the heat wave) may want to use `include_hindcast = TRUE`. If projections are the focus, this becomes less important.

## Variables in ROMS NEP

```{r}
library(kableExtra)
nep_vars <- read.csv("Data/NEP_variable_names.csv")
kable(nep_vars)
```

## Developing an index in R

Load packages and functions

```{r}
# install.packages("pacman")
pacman::p_load(mgcv, dplyr, lubridate, ggplot2, tidyr)
source("R/Delta_correction.R")
```

Load data (averaged to 300 m isobath

```{r}
# Load data averaged across depth and strata
nep_hind <- read.csv("Data/NEP_10k_revised_indices/nep_avg_hind_300.csv")
nep_hind$simulation = "hindcast"

nep_hist <- read.csv("Data/NEP_10k_revised_indices/nep_avg_wb_hist_300.csv")
nep_hist$simulation = "historical"

nep_ssp126 <- read.csv("Data/NEP_10k_revised_indices/nep_avg_wb_ssp126_300.csv")
nep_ssp126$simulation = "ssp126"

nep_585 <- read.csv("Data/NEP_10k_revised_indices/nep_avg_wb_ssp585_300.csv")
nep_585$simulation = "ssp585"

# Combine in list
roms_avg_data <- do.call(rbind, list(nep_hind, nep_hist, nep_ssp126, nep_585))

# Add time and date information
roms_avg_data <- roms_avg_data %>%
  mutate(
    date = lubridate::as_date(date),
    month = lubridate::month(date),
    year = lubridate::year(date))
```

**Example indices 1:** monthly index of sea surface temperature across all spatial strata

```{r}
# Run bias correction for all variables 
# - rbinds bias-corrected projection to historical run
# - SSP126
ssp126_biascorrected <- delta_correction(
  hindcast = roms_avg_data %>% filter(simulation == "hindcast"),
  historical = roms_avg_data %>% filter(simulation == "historical"),
  projection = roms_avg_data %>% filter(simulation == "ssp126"),
  ref_yrs = 1990:2014, # Overlap years for historical and hindcast ROMS
  lognormal = FALSE,
  use_sd = TRUE,
  include_hindcast = FALSE)

# - SSP585
ssp585_biascorrected <- delta_correction(
  hindcast = roms_avg_data %>% filter(simulation == "hindcast"),
  historical = roms_avg_data %>% filter(simulation == "historical"),
  projection = roms_avg_data %>% filter(simulation == "ssp585"),
  ref_yrs = 1990:2014, # Overlap years for historical and hindcast ROMS
  lognormal = FALSE,
  use_sd = TRUE,
  include_hindcast = FALSE)

# Extract variable of interest
goa_SST_ssp126 <- ssp126_biascorrected %>%
  filter(varname == "temp" & depthclass == "Surface" & NMFS_AREA == "All") %>%
  mutate(simulation = "ssp126")

goa_SST_ssp585 <- ssp585_biascorrected %>%
  filter(varname == "temp" & depthclass == "Surface" & NMFS_AREA == "All") %>%
  mutate(simulation = "ssp585")

# Plot it
ggplot(rbind(goa_SST_ssp126, goa_SST_ssp585), aes(date, value_dc)) + 
  geom_line() + 
  facet_wrap(~simulation) + ylab("SST (C)") + xlab("Year-Month")
```

**Example indices 2:** seasonal sea surface temperature across all spatial strata

```{r}
# Take monthlies and average from SSP126
seasonal_sst_ssp126 <- goa_SST_ssp126 %>%
  mutate(season = case_when(
    month %in% c(3,4,5) ~ "spring",
    month %in% c(11,12,1,2) ~ "winter",
    month %in% c(6,7,8) ~ "summer",
    month %in% c(9,10) ~ "fall",
  )) %>%
  group_by(NMFS_AREA, simulation, varname, year, season) %>%
  summarise(value_dc = mean(value_dc))

# Plot it
ggplot(seasonal_sst_ssp126, aes(year, value_dc, colour = season)) + geom_line() +
  ylab("SST (C)") + xlab("Year")
```

**Example indices 3:** Monthly sea surface temperature across 610 and 620 for SSP126 and SSP585

```{r}
# Extract variables we want
goa_SST_ssp126 <- ssp126_biascorrected %>%
  filter(varname == "temp" & depthclass == "Surface" & NMFS_AREA %in% c("610", "620")) %>%
  mutate(simulation = "ssp126") %>%
  pivot_wider(values_from = c(value_dc, value), names_from = NMFS_AREA) %>%
  mutate(value_dc_610_620 = (value_dc_610 * 63986698621 + value_dc_620 * 69583703140) / (63986698621 + 69583703140)) # Take area weighted mean

goa_SST_ssp585 <- ssp585_biascorrected %>%
  filter(varname == "temp" & depthclass == "Surface" & NMFS_AREA %in% c("610", "620")) %>% 
  mutate(simulation = "ssp585") %>%
  pivot_wider(values_from = c(value_dc, value), names_from = NMFS_AREA) %>%
  mutate(value_dc_610_620 = (value_dc_610 * 63986698621 + value_dc_620 * 69583703140) / (63986698621 + 69583703140)) # Take area weighted mean


# Plot it
goa_SST_610_620 <- rbind(goa_SST_ssp126, goa_SST_ssp585)
ggplot(goa_SST_610_620, aes(year, value_dc_610_620, colour = simulation)) + geom_line() +
  ylab("SST (C)") + xlab("Year") + facet_wrap(~simulation)
```

**Example index 4:** mean seasonal small copepod biomass spatial strata 610 and 620 up to the 300 m isobath for SSP585 across the water column

```{r}
# Load data integrated across depth and strata
nep_hind <- read.csv("Data/NEP_10k_revised_indices/nep_sum_hind_300.csv")
nep_hind$simulation = "hindcast"

nep_hist <- read.csv("Data/NEP_10k_revised_indices/nep_sum_wb_hist_300.csv")
nep_hist$simulation = "historical"

nep_ssp126 <- read.csv("Data/NEP_10k_revised_indices/nep_sum_wb_ssp126_300.csv")
nep_ssp126$simulation = "ssp126"

nep_585 <- read.csv("Data/NEP_10k_revised_indices/nep_sum_wb_ssp585_300.csv")
nep_585$simulation = "ssp585"

# Combine in list
roms_sum_data <- do.call(rbind, list(nep_hind, nep_hist, nep_ssp126, nep_585))

# Add time and date information
roms_sum_data <- roms_sum_data %>%
  mutate(
    date = lubridate::as_date(date),
    month = lubridate::month(date),
    year = lubridate::year(date))


# Run bias correction for all variables 
# - rbinds bias-corrected projection to historical run
# - SSP126
ssp126_sum_biascorrected <- delta_correction(
  hindcast = roms_sum_data %>% filter(simulation == "hindcast"),
  historical = roms_sum_data %>% filter(simulation == "historical"),
  projection = roms_sum_data %>% filter(simulation == "ssp126"),
  ref_yrs = 1990:2014, # Overlap years for historical and hindcast ROMS
  lognormal = FALSE,
  use_sd = TRUE,
  include_hindcast = FALSE)

# - SSP585
ssp585_sum_biascorrected <- delta_correction(
  hindcast = roms_sum_data %>% filter(simulation == "hindcast"),
  historical = roms_sum_data %>% filter(simulation == "historical"),
  projection = roms_sum_data %>% filter(simulation == "ssp585"),
  ref_yrs = 1990:2014, # Overlap years for historical and hindcast ROMS
  lognormal = FALSE,
  use_sd = TRUE,
  include_hindcast = FALSE)


# Extract small copepod for desired area
goa_cop_ssp585 <- ssp585_sum_biascorrected %>%
  filter(varname == "Cop" & depthclass == "All" & NMFS_AREA %in% c(610, 620)) %>%
  mutate(simulation = "ssp585")

# Convert to t C per NMFS area. You may use alternative calculations here
# - Units of Cop in the *sum* files are mg C m^-2 of water column
# - Area is in m^2
# - There are 1e-9 tonnes in a mg
# - Final units will be t C per NMFS area 
goa_cop_ssp585 <- goa_cop_ssp585 %>%
  mutate(Cop_biom = case_when(
    NMFS_AREA == "610" ~ 63986698621 * value_dc * 1e-9, # 610 area = 63986698621 m^2
    NMFS_AREA == "620" ~ 69583703140 * value_dc * 1e-9 # 620 area = 69583703140 m^2
  ))

# Take mean fall 
goa_cop_ssp585 <- goa_cop_ssp585 %>%
  group_by(year, month) %>%
  summarise(Cop_biom = sum(Cop_biom)) %>% # Sum biomass across 610 and 620
  mutate(season = case_when(
    month %in% c(3,4,5) ~ "spring",
    month %in% c(11,12,1,2) ~ "winter",
    month %in% c(6,7,8) ~ "summer",
    month %in% c(9,10) ~ "fall",
  )) %>%
  group_by(year, season) %>%
  summarise(Cop_biom = mean(Cop_biom)) # Average across months per season

# Plot it
ggplot(goa_cop_ssp585, aes(year, Cop_biom, colour = season)) + geom_line() +
  ylab("Cop biomass (tonnes)") + xlab("Year")
```

**Example index 5:** annual small copepod production ($t C km^{-2} yr^{-1}$) per NMFS area, up to the 300 m isobath, for scenario ssp585. This example should yield a production index that could be used in EwE.

```{r}
# Extract small copepod production for desired area
# Starting from sum file because it already integrates concentrations to have them as "flat" values per area
goa_cop_prod_ssp585 <- ssp585_sum_biascorrected %>%
  filter(varname == "prod_Cop" & depthclass == "All" & NMFS_AREA %in% c(610, 620)) %>%
  mutate(simulation = "ssp585")

# Convert to t C km^-2 yr^-1 per NMFS area. You may use alternative calculations here
# - Units of prod_Cop are mg C m^-2 d^-1
# - Area is in m^2. There are 1e+6 m2 in a km2
# - There are 1e-9 tonnes in a mg
# - There are ~30 days in a month (approximation, you could get more precise and interpolate monthly values to daily)
goa_cop_prod_ssp585_ewe <- goa_cop_prod_ssp585 %>%
  mutate(month = lubridate::month(date),
         year = lubridate::year(date)) %>%
  mutate(monthly_value = value_dc * 1e-9 * 1e+6 * 30) %>% # value in t C km-2 mo-1
  group_by(NMFS_AREA, simulation, depthclass, varname, year) %>%
  summarise(ecopath_value = sum(monthly_value)) %>%
  ungroup()

# Plot it
ggplot(goa_cop_prod_ssp585_ewe, aes(year, ecopath_value, colour = NMFS_AREA)) + geom_line() +
  ylab("Cop production (tonnes C km-2 yr-1)") + xlab("Year")
```
